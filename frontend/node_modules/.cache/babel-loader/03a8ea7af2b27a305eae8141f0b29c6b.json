{"ast":null,"code":"var _jsxFileName = \"/home/vm/Documents/Work/ToDoList/frontend/src/components/getItems.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass GetItems extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    // Simple GET request using fetch\n    fetch('http://localhost:3000/api/item/all').then(response => response.json()).then(data => {\n      this.setState({\n        items: data\n      });\n      console.log(data);\n      console.log(data.length);\n\n      for (var i = 0; i < data.length; i++) {\n        console.log(data[i].id); //por ahora solo guardemos id y name\n\n        console.log(data[i].name);\n        console.log(data[i].checked);\n        console.log(data[i].iconid);\n        console.log(data[i].folderid);\n        console.log(data[i].userid);\n      }\n    }).catch(error => console.log(error));\n  }\n\n  render() {\n    const {\n      items\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"List of posts\", items.length ? items.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [item.name, \" bla \", item.checked ? 'false' : 'true']\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 33\n      }, this)) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default GetItems;","map":{"version":3,"sources":["/home/vm/Documents/Work/ToDoList/frontend/src/components/getItems.js"],"names":["React","Component","GetItems","constructor","props","state","items","componentDidMount","fetch","then","response","json","data","setState","console","log","length","i","id","name","checked","iconid","folderid","userid","catch","error","render","map","item"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,QAAN,SAAuBD,SAAvB,CAAiC;AAC/BE,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB;AACAC,IAAAA,KAAK,CAAC,oCAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,IAAI,IAAI;AACZ,WAAKC,QAAL,CAAc;AAACP,QAAAA,KAAK,EAAEM;AAAR,OAAd;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACI,MAAjB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,IAAI,CAACI,MAAzB,EAAiCC,CAAC,EAAlC,EAAsC;AACpCH,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACK,CAAD,CAAJ,CAAQC,EAApB,EADoC,CACX;;AACzBJ,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACK,CAAD,CAAJ,CAAQE,IAApB;AACAL,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACK,CAAD,CAAJ,CAAQG,OAApB;AACAN,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACK,CAAD,CAAJ,CAAQI,MAApB;AACAP,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACK,CAAD,CAAJ,CAAQK,QAApB;AACAR,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACK,CAAD,CAAJ,CAAQM,MAApB;AACD;AACF,KAdH,EAcKC,KAdL,CAcWC,KAAK,IAAIX,OAAO,CAACC,GAAR,CAAYU,KAAZ,CAdpB;AAeH;;AAECC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEpB,MAAAA;AAAF,QAAW,KAAKD,KAAtB;AACA,wBAAQ;AAAA,kCAGEC,KAAK,CAACU,MAAN,GACAV,KAAK,CAACqB,GAAN,CAAUC,IAAI,iBAAI;AAAA,mBAAoBA,IAAI,CAACT,IAAzB,WAAoCS,IAAI,CAACR,OAAL,GAAe,OAAf,GAAyB,MAA7D;AAAA,SAAUQ,IAAI,CAACV,EAAf;AAAA;AAAA;AAAA;AAAA,cAAlB,CADA,GACgG,IAJlG;AAAA;AAAA;AAAA;AAAA;AAAA,YAAR;AAOD;;AArC8B;;AAwCjC,eAAehB,QAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass GetItems extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      items: []\n    }\n  }\n\n  componentDidMount() {\n    // Simple GET request using fetch\n    fetch('http://localhost:3000/api/item/all')\n      .then(response => response.json())\n      .then(data => {\n        this.setState({items: data});\n        console.log(data);\n        console.log(data.length);\n        for (var i = 0; i < data.length; i++) {\n          console.log(data[i].id); //por ahora solo guardemos id y name\n          console.log(data[i].name);\n          console.log(data[i].checked);\n          console.log(data[i].iconid);\n          console.log(data[i].folderid);\n          console.log(data[i].userid);\n        } \n      }).catch(error => console.log(error));\n}\n\n  render() {\n    const { items} = this.state;\n    return (<div>\n        List of posts\n        {\n              items.length ?\n              items.map(item => <div key={item.id}>{item.name} bla {item.checked ? 'false' : 'true'}</div>) : null \n        }\n    </div>);\n  }\n}\n\nexport default GetItems;\n"]},"metadata":{},"sourceType":"module"}