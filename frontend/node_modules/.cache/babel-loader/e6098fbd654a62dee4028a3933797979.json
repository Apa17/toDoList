{"ast":null,"code":"var _jsxFileName = \"/home/vm/Documents/Work/ToDoList/frontend/src/components/getItems.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass GetItems extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: []\n    };\n  }\n  /*getItemsGET(){\n    fetch('http://localhost:3000/api/item/all')\n      .then(response => response.json())\n      .then(data => {\n        this.setState({items: data});\n        /*console.log(data);\n        console.log(data.length);\n        for (var i = 0; i < data.length; i++) {\n          console.log(data[i].id); //por ahora solo guardemos id y name\n          console.log(data[i].name);\n          console.log(data[i].checked);\n          console.log(data[i].iconid);\n          console.log(data[i].folderid);\n          console.log(data[i].userid);\n        } \n      }).catch(error => console.log(error));\n  }*/\n\n\n  componentDidMount() {//this.getItemsGET();\n  }\n\n  render() {\n    const {\n      items\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"List of posts\", items.length ? items.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [item.checked ? /*#__PURE__*/_jsxDEV(\"input\", {\n          id: item.id,\n          defaultChecked: true,\n          type: \"checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n          id: item.id,\n          type: \"checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this), item.name, /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"\",\n          children: \" Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 33\n      }, this)) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default GetItems;","map":{"version":3,"sources":["/home/vm/Documents/Work/ToDoList/frontend/src/components/getItems.js"],"names":["React","Component","GetItems","constructor","props","state","items","componentDidMount","render","length","map","item","checked","id","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,QAAN,SAAwBD,SAAxB,CAAkC;AAChCE,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAGD;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEEC,EAAAA,iBAAiB,GAAG,CACjB;AACF;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEF,MAAAA;AAAF,QAAW,KAAKD,KAAtB;AACA,wBAAQ;AAAA,kCAGEC,KAAK,CAACG,MAAN,GACAH,KAAK,CAACI,GAAN,CAAUC,IAAI,iBAAI;AAAA,mBACfA,IAAI,CAACC,OAAL,gBACD;AAAO,UAAA,EAAE,EAAED,IAAI,CAACE,EAAhB;AAAoB,UAAA,cAAc,MAAlC;AAAmC,UAAA,IAAI,EAAC;AAAxC;AAAA;AAAA;AAAA;AAAA,gBADC,gBAED;AAAO,UAAA,EAAE,EAAEF,IAAI,CAACE,EAAhB;AAAoB,UAAA,IAAI,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA,gBAHgB,EAKfF,IAAI,CAACG,IALU,eAMhB;AAAG,UAAA,IAAI,EAAC,EAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANgB;AAAA,SAAUH,IAAI,CAACE,EAAf;AAAA;AAAA;AAAA;AAAA,cAAlB,CADA,GAQY,IAXd;AAAA;AAAA;AAAA;AAAA;AAAA,YAAR;AAcD;;AA/C+B;;AAkDlC,eAAeX,QAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass GetItems  extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      items: []\n    }\n  }\n\n  /*getItemsGET(){\n    fetch('http://localhost:3000/api/item/all')\n      .then(response => response.json())\n      .then(data => {\n        this.setState({items: data});\n        /*console.log(data);\n        console.log(data.length);\n        for (var i = 0; i < data.length; i++) {\n          console.log(data[i].id); //por ahora solo guardemos id y name\n          console.log(data[i].name);\n          console.log(data[i].checked);\n          console.log(data[i].iconid);\n          console.log(data[i].folderid);\n          console.log(data[i].userid);\n        } \n      }).catch(error => console.log(error));\n  }*/\n\n  componentDidMount() {\n     //this.getItemsGET();\n  }\n\n  render() {\n    const { items} = this.state;\n    return (<div>\n        List of posts\n        {\n              items.length ?\n              items.map(item => <div key={item.id}>\n                {item.checked ? \n                <input id={item.id} defaultChecked type=\"checkbox\"  />  : \n                <input id={item.id} type=\"checkbox\"  />  \n                }\n                {item.name}\n                <a href=\"\"> Edit</a>\n                </div>) : null \n        }\n    </div>);\n  }\n}\n\nexport default GetItems;\n"]},"metadata":{},"sourceType":"module"}