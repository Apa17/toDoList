{"ast":null,"code":"var _jsxFileName = \"/home/vm/Documents/Work/ToDoList/frontend/src/components/Todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { RiCloseCircleLine } from 'react-icons/ri';\nimport { TiEdit } from 'react-icons/ti';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Todo(items, checkItem) {\n  _s();\n\n  const [edit, setEdit] = useState({\n    id: null,\n    name: ''\n  });\n  return items.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: item.isComplete ? 'item-row complete' : 'item-row',\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => checkItem(item.id),\n      children: item.name\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"icons\",\n      children: [/*#__PURE__*/_jsxDEV(RiCloseCircleLine, {\n        onClick: () => removeItem(item.id),\n        className: \"delete-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TiEdit, {\n        onClick: () => setEdit({\n          id: item.id,\n          value: item.name\n        }),\n        className: \"edit-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }, this)]\n  }, item.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this));\n}\n/* <div className={item.checked ? 'todo-row-checked' : 'todo-row'} key={item.id}>\n        {item.checked ? \n                <input id={item.id} defaultChecked type=\"checkbox\" onClick={()=> checkItem(item.id)} />  : \n                <input id={item.id} type=\"checkbox\"  onClick={()=> checkItem(item.id)} />  \n        \n        }\n        <div className='text-item'>{item.name}</div>\n        <div className='icons'> \n            <RiCloseCircleLine /> \n            <TiEdit />\n        </div>\n    </div>*/\n\n\n_s(Todo, \"ewkU6EShjkvjZxYp2UgvrSNxukI=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/home/vm/Documents/Work/ToDoList/frontend/src/components/Todo.js"],"names":["React","useState","RiCloseCircleLine","TiEdit","Todo","items","checkItem","edit","setEdit","id","name","map","item","isComplete","removeItem","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,iBAAR,QAAgC,gBAAhC;AACA,SAAQC,MAAR,QAAqB,gBAArB;;;AAGA,SAASC,IAAT,CAAcC,KAAd,EAAqBC,SAArB,EAAgC;AAAA;;AAC5B,QAAK,CAACC,IAAD,EAAOC,OAAP,IAAiBP,QAAQ,CAAC;AAC3BQ,IAAAA,EAAE,EAAC,IADwB;AAE3BC,IAAAA,IAAI,EAAE;AAFqB,GAAD,CAA9B;AAIA,SAAOL,KAAK,CAACM,GAAN,CAAWC,IAAD,iBAEjB;AACA,IAAA,SAAS,EAAEA,IAAI,CAACC,UAAL,GAAkB,mBAAlB,GAAwC,UADnD;AAAA,4BAIA;AAAmB,MAAA,OAAO,EAAE,MAAMP,SAAS,CAACM,IAAI,CAACH,EAAN,CAA3C;AAAA,gBACGG,IAAI,CAACF;AADR,OAAUE,IAAI,CAACH,EAAf;AAAA;AAAA;AAAA;AAAA,YAJA,eAOA;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACE,QAAC,iBAAD;AACE,QAAA,OAAO,EAAE,MAAMK,UAAU,CAACF,IAAI,CAACH,EAAN,CAD3B;AAEE,QAAA,SAAS,EAAC;AAFZ;AAAA;AAAA;AAAA;AAAA,cADF,eAKE,QAAC,MAAD;AACE,QAAA,OAAO,EAAE,MAAMD,OAAO,CAAC;AAAEC,UAAAA,EAAE,EAAEG,IAAI,CAACH,EAAX;AAAeM,UAAAA,KAAK,EAAEH,IAAI,CAACF;AAA3B,SAAD,CADxB;AAEE,QAAA,SAAS,EAAC;AAFZ;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YAPA;AAAA,KAEKE,IAAI,CAACH,EAFV;AAAA;AAAA;AAAA;AAAA,UAFO,CAAP;AAqBH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;GAtCSL,I;;KAAAA,I;AAuCT,eAAeA,IAAf","sourcesContent":["import React, {useState} from 'react';\nimport {RiCloseCircleLine} from 'react-icons/ri';\nimport {TiEdit} from 'react-icons/ti';\n\n\nfunction Todo(items, checkItem) {\n    const[edit, setEdit]= useState({\n        id:null,\n        name: ''\n    })\n    return items.map((item) => (\n\n    <div\n    className={item.isComplete ? 'item-row complete' : 'item-row'}\n    key={item.id}\n  >\n    <div key={item.id} onClick={() => checkItem(item.id)}>\n      {item.name}\n    </div>\n    <div className='icons'>\n      <RiCloseCircleLine\n        onClick={() => removeItem(item.id)}\n        className='delete-icon'\n      />\n      <TiEdit\n        onClick={() => setEdit({ id: item.id, value: item.name })}\n        className='edit-icon'\n      />\n    </div>\n  </div>\n  ));\n}\n/* <div className={item.checked ? 'todo-row-checked' : 'todo-row'} key={item.id}>\n        {item.checked ? \n                <input id={item.id} defaultChecked type=\"checkbox\" onClick={()=> checkItem(item.id)} />  : \n                <input id={item.id} type=\"checkbox\"  onClick={()=> checkItem(item.id)} />  \n        \n        }\n        <div className='text-item'>{item.name}</div>\n        <div className='icons'> \n            <RiCloseCircleLine /> \n            <TiEdit />\n        </div>\n    </div>*/\nexport default Todo;\n"]},"metadata":{},"sourceType":"module"}