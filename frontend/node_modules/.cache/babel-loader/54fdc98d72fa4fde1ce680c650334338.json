{"ast":null,"code":"var _jsxFileName = \"/home/vm/Documents/Work/ToDoList/frontend/src/components/TodoList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport GetItems from './getItems';\nimport Todo from './Todo';\nimport TodoForm from './TodoForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction getItemsGET() {\n  fetch('http://localhost:3000/api/item/all').then(response => response.json()).then(data => {\n    return data;\n    /*\n    console.log(data);\n    console.log(data.length);\n    for (var i = 0; i < data.length; i++) {\n      console.log(data[i].id); //por ahora solo guardemos id y name\n      console.log(data[i].name);\n      console.log(data[i].checked);\n      console.log(data[i].iconid);\n      console.log(data[i].folderid);\n      console.log(data[i].userid);\n    } */\n  }).catch(error => console.log(error));\n}\n\nfunction TodoList() {\n  _s();\n\n  const [items, setItems] = useState([]);\n\n  const addItem = item => {\n    if (!item.text || /^\\s*$/.test(item.text)) {\n      return;\n    }\n    /* const newTodos = [todo, ...todos];\n         // setTodos(newTodos);\n     console.log(...todos);\n    */\n    //POST\n\n\n    var nombre = item.text;\n    fetch('http://localhost:3000/api/item/save', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name: nombre\n      })\n    }).then(() => {\n      //refresh list\n      setItems(getItemsGET());\n      console.log('new item added');\n    }).catch(error => console.log(error));\n  };\n\n  const checkItem = id => {\n    let updatedItems = items.map(item => {\n      if (item.id === id) {\n        item.checked = !item.checked;\n      }\n\n      return item;\n    });\n    setItems(updatedItems);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Todo, {\n      items: items,\n      checkItem: checkItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      onSubmit: addItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TodoList, \"6WAym07vHedVzpAy8bFDJKqtv8I=\");\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/home/vm/Documents/Work/ToDoList/frontend/src/components/TodoList.js"],"names":["React","useState","GetItems","Todo","TodoForm","getItemsGET","fetch","then","response","json","data","catch","error","console","log","TodoList","items","setItems","addItem","item","text","test","nombre","method","headers","body","JSON","stringify","name","checkItem","id","updatedItems","map","checked"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,SAASC,WAAT,GAAsB;AACpBC,EAAAA,KAAK,CAAC,oCAAD,CAAL,CACOC,IADP,CACYC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADxB,EAEOF,IAFP,CAEYG,IAAI,IAAI;AACZ,WAAOA,IAAP;AACA;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACS,GAfP,EAeSC,KAfT,CAeeC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAfxB;AAgBD;;AAED,SAASG,QAAT,GAAoB;AAAA;;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMiB,OAAO,GAAGC,IAAI,IAAI;AACpB,QAAI,CAACA,IAAI,CAACC,IAAN,IAAc,QAAQC,IAAR,CAAaF,IAAI,CAACC,IAAlB,CAAlB,EAA2C;AACzC;AACD;AAED;AACR;AACA;AACA;AAGQ;;;AACA,QAAIE,MAAM,GAAGH,IAAI,CAACC,IAAlB;AACAd,IAAAA,KAAK,CAAC,qCAAD,EAAwC;AACzCiB,MAAAA,MAAM,EAAE,MADiC;AAEzCC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAFgC;AAGzCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,QAAAA,IAAI,EAAEN;AAAR,OAAf;AAHmC,KAAxC,CAAL,CAIKf,IAJL,CAIU,MAAM;AACZ;AACAU,MAAAA,QAAQ,CAACZ,WAAW,EAAZ,CAAR;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACD,KARH,EAQKH,KARL,CAQWC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CARpB;AASH,GAtBD;;AAwBA,QAAMiB,SAAS,GAAGC,EAAE,IAAI;AACtB,QAAIC,YAAY,GAAGf,KAAK,CAACgB,GAAN,CAAUb,IAAI,IAAI;AACnC,UAAIA,IAAI,CAACW,EAAL,KAAYA,EAAhB,EAAoB;AAClBX,QAAAA,IAAI,CAACc,OAAL,GAAe,CAACd,IAAI,CAACc,OAArB;AACD;;AACD,aAAOd,IAAP;AACD,KALkB,CAAnB;AAMAF,IAAAA,QAAQ,CAACc,YAAD,CAAR;AACD,GARD;;AAUA,sBACI;AAAA,4BACI,QAAC,IAAD;AAAM,MAAA,KAAK,EAAEf,KAAb;AAAoB,MAAA,SAAS,EAAEa;AAA/B;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEX;AAApB;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GA5CQH,Q;;KAAAA,Q;AA8CT,eAAeA,QAAf","sourcesContent":["import React, {useState} from 'react';\nimport GetItems from './getItems';\nimport Todo from './Todo';\nimport TodoForm from './TodoForm';\n\nfunction getItemsGET(){\n  fetch('http://localhost:3000/api/item/all')\n        .then(response => response.json())\n        .then(data => {\n          return data;\n          /*\n          console.log(data);\n          console.log(data.length);\n          for (var i = 0; i < data.length; i++) {\n            console.log(data[i].id); //por ahora solo guardemos id y name\n            console.log(data[i].name);\n            console.log(data[i].checked);\n            console.log(data[i].iconid);\n            console.log(data[i].folderid);\n            console.log(data[i].userid);\n          } */\n        }).catch(error => console.log(error));\n}\n\nfunction TodoList() {\n    const [items, setItems] = useState([]);\n\n    const addItem = item => {\n        if (!item.text || /^\\s*$/.test(item.text)) {\n          return;\n        }\n    \n        /* const newTodos = [todo, ...todos];\n    \n        // setTodos(newTodos);\n         console.log(...todos);\n        */\n\n        //POST\n        var nombre = item.text;\n        fetch('http://localhost:3000/api/item/save', {\n            method: 'POST',\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({ name: nombre})\n          }).then(() => {\n            //refresh list\n            setItems(getItemsGET());\n            console.log('new item added');\n          }).catch(error => console.log(error));\n    };\n\n    const checkItem = id => {\n      let updatedItems = items.map(item => {\n        if (item.id === id) {\n          item.checked = !item.checked;\n        }\n        return item;\n      });\n      setItems(updatedItems);\n    };\n\n    return (\n        <div>\n            <Todo items={items} checkItem={checkItem} />\n            <br/> \n            <TodoForm onSubmit={addItem}/>\n        </div>\n    );\n}\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}