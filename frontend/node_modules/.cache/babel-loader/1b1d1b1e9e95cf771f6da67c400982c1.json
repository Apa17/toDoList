{"ast":null,"code":"var _jsxFileName = \"/home/vm/Documents/Work/ToDoList/frontend/src/components/ToDo.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ToDo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmitAdd = async e => {\n      e.preventDefault();\n      let texto = this.state.input;\n\n      if (!(!texto || /^\\s*$/.test(texto))) {\n        await fetch('http://localhost:3000/api/item/save', {\n          method: 'POST',\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            name: texto\n          })\n        }); //.then(response => response.json()).then(dataa => idnueva = dataa[0].id)\n        //await fetch('http://localhost:3000/api/item/find('+idnueva+')').then(response => response.json())\n        //.then(dataaa => { this.setState.items[this.setState.items.length]=dataaa[0]});\n        //lo anterior por alguna razon no funciona, intentare una vez termine.\n      }\n\n      this.getItemsGET(); //deberia cambiar esto por una solucion ajax. si me queda tiempo\n\n      this.setInput('');\n    };\n\n    this.handleSubmitEdit = async e => {\n      e.preventDefault();\n      let texto = document.getElementById('editinput' + e.target.name).value;\n\n      if (!(!texto || /^\\s*$/.test(texto))) {\n        await fetch('http://localhost:3000/api/item/modifyname', {\n          method: 'POST',\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            id: e.target.name,\n            name: texto\n          })\n        }); //.then(response => response.json()).then(dataa => idnueva = dataa[0].id)\n        //await fetch('http://localhost:3000/api/item/find('+idnueva+')').then(response => response.json())\n        //.then(dataaa => { this.setState.items[this.setState.items.length]=dataaa[0]});\n        //lo anterior por alguna razon no funciona, intentare una vez termine.\n      }\n\n      this.getItemsGET(); //deberia cambiar esto por una solucion ajax. si me queda tiempo, no me queda jaja\n\n      e.target.style.display = 'none';\n      document.getElementById('editb' + e.target.name).value = \"0\";\n    };\n\n    this.handleChange = e => {\n      this.setInput(e.target.value);\n    };\n\n    this.handleClickEdit = e => {\n      if (e.target.value !== \"0\") {\n        document.getElementById('edit' + e.target.name).style.display = 'none';\n        e.target.value = \"0\";\n      } else {\n        document.getElementById('edit' + e.target.name).style.display = 'block';\n        e.target.value = \"1\";\n      }\n    };\n\n    this.handleChangeCheckbox = async e => {\n      await fetch('http://localhost:3000/api/item/modify/' + e.target.id, {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify() //, checked: e.target.value})\n\n      });\n    };\n\n    this.handleSubmitDelete = async e => {\n      console.log(e);\n      await fetch('http://localhost:3000/api/item/delete/' + e.target.id, {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify() //, checked: e.target.value})\n\n      });\n      this.getItemsGET(); //esto se podria hacer mas facil pero estoy corto de tiempo, saludos!\n    };\n\n    this.state = {\n      reload: Boolean,\n      items: [],\n      input: String\n    };\n  }\n\n  getItemsGET() {\n    fetch('http://localhost:3000/api/item/all').then(response => response.json()).then(data => {\n      this.setState({\n        items: data\n      });\n      /*\n      console.log(data);\n      console.log(data.length);\n      for (var i = 0; i < data.length; i++) {\n        console.log(data[i].id); //por ahora solo guardemos id y name\n        console.log(data[i].name);\n        console.log(data[i].checked);\n        console.log(data[i].iconid);\n        console.log(data[i].folderid);\n        console.log(data[i].userid);\n      } */\n    }).catch(error => console.log(error));\n  }\n\n  componentDidMount() {\n    this.getItemsGET();\n  }\n\n  setInput(texto) {\n    document.getElementById('input-item').value = texto;\n    this.setState({\n      input: texto\n    });\n  }\n\n  render() {\n    if (!this.state.input) {\n      this.state.input = '';\n    }\n\n    const {\n      items\n    } = this.state; //    \n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [items.length ? items.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [item.checked ? /*#__PURE__*/_jsxDEV(\"input\", {\n          id: item.id,\n          value: \"1\",\n          defaultChecked: true,\n          type: \"checkbox\",\n          onChange: this.handleChangeCheckbox\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n          id: item.id,\n          value: \"0\",\n          type: \"checkbox\",\n          onChange: this.handleChangeCheckbox\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          id: `p${item.id}`,\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: `editb${item.id}`,\n          name: item.id,\n          value: \"0\",\n          onClick: this.handleClickEdit,\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: item.id,\n          onClick: this.handleSubmitDelete,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"add-item-form\",\n          id: `edit${item.id}`,\n          name: item.id,\n          style: {\n            display: 'none'\n          },\n          onSubmit: this.handleSubmitEdit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: `editinput${item.id}`,\n            type: \"text\",\n            placeholder: this.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"todo-button-item\",\n            children: \" Edit ToDo item\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 17\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 33\n      }, this)) : null, /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"add-item-form\",\n        onSubmit: this.handleSubmitAdd,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"input-item\",\n          type: \"text\",\n          placeholder: \"Add a todo\",\n          name: \"text\",\n          className: \"todo-input\",\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"todo-button-item\",\n          children: \" Add ToDo item\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ToDo;","map":{"version":3,"sources":["/home/vm/Documents/Work/ToDoList/frontend/src/components/ToDo.js"],"names":["React","Component","ToDo","constructor","props","handleSubmitAdd","e","preventDefault","texto","state","input","test","fetch","method","headers","body","JSON","stringify","name","getItemsGET","setInput","handleSubmitEdit","document","getElementById","target","value","id","style","display","handleChange","handleClickEdit","handleChangeCheckbox","handleSubmitDelete","console","log","reload","Boolean","items","String","then","response","json","data","setState","catch","error","componentDidMount","render","length","map","item","checked"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nclass ToDo extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      reload: Boolean,\n      items: [],\n      input: String,\n    }\n  }\n\n  getItemsGET(){\n    fetch('http://localhost:3000/api/item/all')\n      .then(response => response.json())\n      .then(data => {\n        this.setState({items: data});\n        /*\n        console.log(data);\n        console.log(data.length);\n        for (var i = 0; i < data.length; i++) {\n          console.log(data[i].id); //por ahora solo guardemos id y name\n          console.log(data[i].name);\n          console.log(data[i].checked);\n          console.log(data[i].iconid);\n          console.log(data[i].folderid);\n          console.log(data[i].userid);\n        } */\n      }).catch(error => console.log(error));\n  }\n\n  componentDidMount() {\n     this.getItemsGET();\n  }\n\n  setInput(texto){\n    document.getElementById('input-item').value = texto;\n    this.setState({input: texto});\n  }\n\n  handleSubmitAdd = async e => { \n    e.preventDefault();\n\n    let texto = this.state.input;\n\n    if (!(!texto || /^\\s*$/.test(texto))) {\n        await fetch('http://localhost:3000/api/item/save', {\n            method: 'POST',\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({ name: texto})\n          })//.then(response => response.json()).then(dataa => idnueva = dataa[0].id)\n          //await fetch('http://localhost:3000/api/item/find('+idnueva+')').then(response => response.json())\n          //.then(dataaa => { this.setState.items[this.setState.items.length]=dataaa[0]});\n          //lo anterior por alguna razon no funciona, intentare una vez termine.\n      }\n      \n      this.getItemsGET(); //deberia cambiar esto por una solucion ajax. si me queda tiempo\n\n    this.setInput('');\n  };\n\n  handleSubmitEdit = async e =>{\n    e.preventDefault();\n    let texto = document.getElementById('editinput'+e.target.name).value;\n     if (!(!texto || /^\\s*$/.test(texto))) {\n       await fetch('http://localhost:3000/api/item/modifyname', {\n           method: 'POST',\n           headers: { \"Content-Type\": \"application/json\" },\n           body: JSON.stringify({ id: e.target.name, name: texto})\n         })//.then(response => response.json()).then(dataa => idnueva = dataa[0].id)\n         //await fetch('http://localhost:3000/api/item/find('+idnueva+')').then(response => response.json())\n         //.then(dataaa => { this.setState.items[this.setState.items.length]=dataaa[0]});\n         //lo anterior por alguna razon no funciona, intentare una vez termine.\n     }\n    \n     this.getItemsGET(); //deberia cambiar esto por una solucion ajax. si me queda tiempo, no me queda jaja\n      e.target.style.display = 'none';\n      document.getElementById('editb'+e.target.name).value=\"0\";\n  };\n\n  handleChange = e => { \n    this.setInput(e.target.value);\n  };\n\n  handleClickEdit = e => { \n    if(e.target.value !== \"0\"){\n        document.getElementById('edit'+e.target.name).style.display = 'none';\n        e.target.value = \"0\";\n    }else{\n        document.getElementById('edit'+e.target.name).style.display = 'block';\n        e.target.value = \"1\";\n    }\n  };\n\n  handleChangeCheckbox = async e =>{\n    await fetch('http://localhost:3000/api/item/modify/'+e.target.id, {\n    method: 'POST',\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify()//, checked: e.target.value})\n    });\n  };\n\n  handleSubmitDelete = async e =>{\n    console.log(e);\n    await fetch('http://localhost:3000/api/item/delete/'+e.target.id, {\n    method: 'POST',\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify()//, checked: e.target.value})\n    });\n    this.getItemsGET(); //esto se podria hacer mas facil pero estoy corto de tiempo, saludos!\n  };\n\n  render() {\n    if(!this.state.input){\n      this.state.input='';\n    }\n    const { items} = this.state;\n    //    \n    return (<div>\n        {\n              items.length ?\n              items.map(item => <div key={item.id}>\n                {item.checked ? \n                <input id={item.id} value=\"1\" defaultChecked type=\"checkbox\"  onChange={this.handleChangeCheckbox}/>  : \n                <input id={item.id} value=\"0\" type=\"checkbox\"  onChange={this.handleChangeCheckbox}/>  \n                }\n                <span id={`p${item.id}`}>{item.name}</span>       \n                <button id={`editb${item.id}`} name={item.id} value=\"0\" onClick={this.handleClickEdit}>Edit</button>\n                <button id={item.id} onClick={this.handleSubmitDelete}>Delete</button>\n\n                <form className=\"add-item-form\" id={`edit${item.id}`} name={item.id} style={{display: 'none'}} onSubmit={this.handleSubmitEdit}>\n                    <input  id={`editinput${item.id}`} \n                    type=\"text\" \n                    placeholder={this.name} \n                    ></input>\n                    <button className='todo-button-item'> Edit ToDo item</button>\n                    <br></br>\n                </form>\n                </div>\n\n                ) : null \n        }\n              \n          <form className=\"add-item-form\" onSubmit={this.handleSubmitAdd}>\n            <input id=\"input-item\"\n                type='text' \n                placeholder='Add a todo' \n                name = 'text' \n                className='todo-input'\n                onChange={this.handleChange}\n            />\n            <button className='todo-button-item'> Add ToDo item</button>\n            \n        </form>\n        <br/>\n    </div>);\n  }\n}\n\nexport default ToDo;\n"]},"metadata":{},"sourceType":"module"}