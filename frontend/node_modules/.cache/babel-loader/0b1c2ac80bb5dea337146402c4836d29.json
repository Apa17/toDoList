{"ast":null,"code":"var _jsxFileName = \"/home/vm/Documents/Work/ToDoList/frontend/src/components/getItems.js\";\nimport React, { Component } from 'react';\nimport { RiCloseCircleLine } from 'react-icons/ri';\nimport { TiEdit } from 'react-icons/ti';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass GetItems extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = e => {\n      //adapt this\n      e.preventDefault(); //additem\n\n      this.setInput('');\n    };\n\n    this.handleChange = e => {\n      //adapt this\n      this.setInput(e.target.value);\n    };\n\n    this.state = {\n      reload: Boolean,\n      items: [],\n      input: String\n    };\n  }\n\n  getItemsGET() {\n    fetch('http://localhost:3000/api/item/all').then(response => response.json()).then(data => {\n      this.setState({\n        items: data\n      });\n      /*\n      console.log(data);\n      console.log(data.length);\n      for (var i = 0; i < data.length; i++) {\n        console.log(data[i].id); //por ahora solo guardemos id y name\n        console.log(data[i].name);\n        console.log(data[i].checked);\n        console.log(data[i].iconid);\n        console.log(data[i].folderid);\n        console.log(data[i].userid);\n      } */\n    }).catch(error => console.log(error));\n  }\n\n  componentDidMount() {\n    this.getItemsGET();\n  }\n\n  setInput(texto) {\n    this.setState({\n      input: texto\n    });\n  }\n\n  render() {\n    const {\n      items\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"List of posts\", items.length ? items.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [item.checked ? /*#__PURE__*/_jsxDEV(\"input\", {\n          id: item.id,\n          defaultChecked: true,\n          type: \"checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n          id: item.id,\n          type: \"checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this), item.name, /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"\",\n          children: \" Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 33\n      }, this)) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icons\",\n        children: [/*#__PURE__*/_jsxDEV(RiCloseCircleLine, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(TiEdit, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"todo-form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Add a todo\",\n          value: input,\n          name: \"text\",\n          className: \"todo-input\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"todo-button-item\",\n          children: \" Add todo item\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default GetItems;","map":{"version":3,"sources":["/home/vm/Documents/Work/ToDoList/frontend/src/components/getItems.js"],"names":["React","Component","RiCloseCircleLine","TiEdit","GetItems","constructor","props","handleSubmit","e","preventDefault","setInput","handleChange","target","value","state","reload","Boolean","items","input","String","getItemsGET","fetch","then","response","json","data","setState","catch","error","console","log","componentDidMount","texto","render","length","map","item","checked","id","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {RiCloseCircleLine} from 'react-icons/ri';\nimport {TiEdit} from 'react-icons/ti';\n\nclass GetItems extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      reload: Boolean,\n      items: [],\n      input: String,\n    }\n  }\n\n  getItemsGET(){\n    fetch('http://localhost:3000/api/item/all')\n      .then(response => response.json())\n      .then(data => {\n        this.setState({items: data});\n        /*\n        console.log(data);\n        console.log(data.length);\n        for (var i = 0; i < data.length; i++) {\n          console.log(data[i].id); //por ahora solo guardemos id y name\n          console.log(data[i].name);\n          console.log(data[i].checked);\n          console.log(data[i].iconid);\n          console.log(data[i].folderid);\n          console.log(data[i].userid);\n        } */\n      }).catch(error => console.log(error));\n  }\n\n  componentDidMount() {\n     this.getItemsGET();\n  }\n\n  setInput(texto){\n    this.setState({input: texto})\n  }\n\n  handleSubmit = e => { //adapt this\n    e.preventDefault();\n\n    //additem\n    \n    this.setInput('');\n  };\n\n  handleChange = e => { //adapt this\n    this.setInput(e.target.value);\n  };\n\n  render() {\n    const { items} = this.state;\n    return (<div>\n        List of posts\n        {\n              items.length ?\n              items.map(item => <div key={item.id}>\n                {item.checked ? \n                <input id={item.id} defaultChecked type=\"checkbox\"  />  : \n                <input id={item.id} type=\"checkbox\"  />  \n                }\n                {item.name}\n                <a href=\"\"> Edit</a>\n                </div>) : null \n        }\n              <div className='icons'> \n              <RiCloseCircleLine /> \n              <TiEdit />\n              </div>  \n          <form className=\"todo-form\" onSubmit={handleSubmit}>\n            <input \n                type='text' \n                placeholder='Add a todo' \n                value = {input} \n                name = 'text' \n                className='todo-input'\n                onChange={handleChange}\n            />\n            <button className='todo-button-item'> Add todo item</button>\n            \n        </form>\n    </div>);\n  }\n}\n\nexport default GetItems;\n"]},"metadata":{},"sourceType":"module"}