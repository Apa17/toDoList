{"ast":null,"code":"var _jsxFileName = \"/home/vm/Documents/Work/ToDoList/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Square(props) {\n  //changed class that extens react.component for function\n  return (\n    /*#__PURE__*/\n    //returns  previous render()\n    _jsxDEV(\"button\", {\n      className: \"square\",\n      onClick: props.onClick,\n      children: props.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)\n  );\n}\n\n_c = Square;\n\nclass Board extends React.Component {\n  /*\n  constructor(props){\n  super(props);\n  this.state = {\n  squares: Array(9).fill(null),\n  xIsNext: true,\n  estado: 'Next player: X',\n  };\n  }*/\n  handleClick(i) {\n    const squares = this.state.squares.slice();\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      squares: squares,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  renderSquare(i) {\n    return /*#__PURE__*/_jsxDEV(Square, {\n      value: this.props.squares[i],\n      onClick: () => this.props.onClick(i)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this);\n  }\n\n  render() {\n    //const status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status\",\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      xIsNext: true\n    };\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[history.length - 1];\n    const winner = calculateWinner(current.squares);\n    let status;\n\n    if (winner) {\n      if (winner !== 'draw') {\n        status = 'Winner: ' + winner;\n      } else {\n        status = \"It's a draw\";\n      }\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {\n          squares: current.squares,\n          onClick: i => this.handleClick(i)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: {\n            status\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this);\n  }\n\n} // ========================================\n\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 117,\n  columnNumber: 3\n}, this), document.getElementById('root'));\n\nfunction calculateWinner(squares) {\n  // puede ser optimizado\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  var draw = true;\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n\n    if (!squares[a] || !squares[b] || !squares[c]) {\n      draw = false;\n    }\n  }\n\n  if (draw == true) {\n    return 'draw';\n  }\n\n  return null;\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Square\");","map":{"version":3,"sources":["/home/vm/Documents/Work/ToDoList/src/index.js"],"names":["React","ReactDOM","Square","props","onClick","value","Board","Component","handleClick","i","squares","state","slice","calculateWinner","xIsNext","setState","renderSquare","render","status","Game","constructor","history","Array","fill","current","length","winner","document","getElementById","lines","draw","a","b","c"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square (props){  //changed class that extens react.component for function\n    return ( //returns  previous render()\n      <button className=\"square\" \n      onClick={props.onClick}\n      >\n        {props.value}\n      </button>\n    );  \n}\n\nclass Board extends React.Component {/*\n  constructor(props){\n    super(props);\n    this.state = {\n      squares: Array(9).fill(null),\n      xIsNext: true,\n      estado: 'Next player: X',\n    };\n  }*/\n\n  handleClick(i) {\n    const squares = this.state.squares.slice();\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    squares[i]= this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      squares: squares,\n      xIsNext: !this.state.xIsNext,\n    });\n  }\n\n  renderSquare(i) {\n    return  (\n    <Square \n      value={this.props.squares[i]} \n      onClick={()=> this.props.onClick(i)} \n    />);\n  }\n\n  render() {\n    //const status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    \n\n    return (\n      <div>\n        <div className=\"status\">{status}</div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      history:[{\n        squares: Array(9).fill(null),\n      }],\n      xIsNext: true,\n    }\n  }\n  render() {\n    const history = this.state.history;\n    const current = history[history.length -1]\n    const winner = calculateWinner(current.squares);\n    let status;\n    if (winner) {\n      if(winner !== 'draw'){\n        status = 'Winner: ' + winner;\n      }else{\n        status = \"It's a draw\";\n      }\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board \n          squares ={current.squares}\n          onClick={(i) => this.handleClick(i)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{ {status} }</div>\n          <ol>{/* TODO */}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n\nfunction calculateWinner(squares) { // puede ser optimizado\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  var draw=true;\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n    if(!squares[a] || !squares[b] || !squares[c]){\n      draw=false;\n    }\n  }\n  if(draw == true){\n    return 'draw';\n  }\n  return null;\n}"]},"metadata":{},"sourceType":"module"}