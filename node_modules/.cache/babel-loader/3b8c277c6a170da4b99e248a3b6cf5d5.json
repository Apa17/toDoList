{"ast":null,"code":"var _jsxFileName = \"/home/vm/Documents/Work/ToDoList/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from './logo.svg';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // State\n  const [todos, setTodos] = useState([]); // Binding\n\n  const todoText = useRef(); // Side Effects / Lifecycle\n\n  useEffect(() => {\n    const existingTodos = localStorage.getItem('todos');\n    setTodos(existingTodos ? JSON.parse(existingTodos) : []);\n  }, []); // Events\n\n  function addTodo(event) {\n    event.preventDefault();\n    const next = [...todos, todoText.current.value];\n    setTodos(next);\n    localStorage.setItem('todos', JSON.stringify(next));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: todo\n      }, todo, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 29\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addTodo,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"What needs to be done?\",\n        ref: todoText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Add Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"NHoB79N9k+y0vyz82my3GYe+y3Q=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/vm/Documents/Work/ToDoList/src/App.js"],"names":["logo","App","todos","setTodos","useState","todoText","useRef","useEffect","existingTodos","localStorage","getItem","JSON","parse","addTodo","event","preventDefault","next","current","value","setItem","stringify","map","todo"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAO,WAAP;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACd;AACC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBC,QAAQ,CAAC,EAAD,CAAlC,CAFa,CAIb;;AACA,QAAMC,QAAQ,GAAGC,MAAM,EAAvB,CALa,CAOb;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMC,aAAa,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAtB;AACAP,IAAAA,QAAQ,CAACK,aAAa,GAAGG,IAAI,CAACC,KAAL,CAAWJ,aAAX,CAAH,GAA+B,EAA7C,CAAR;AACD,GAHQ,EAGN,EAHM,CAAT,CARa,CAab;;AACA,WAASK,OAAT,CAAiBC,KAAjB,EAAwB;AACtBA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,IAAI,GAAG,CAAC,GAAGd,KAAJ,EAAWG,QAAQ,CAACY,OAAT,CAAiBC,KAA5B,CAAb;AACAf,IAAAA,QAAQ,CAACa,IAAD,CAAR;AACAP,IAAAA,YAAY,CAACU,OAAb,CAAqB,OAArB,EAA8BR,IAAI,CAACS,SAAL,CAAeJ,IAAf,CAA9B;AACD;;AAED,sBACE;AAAA,4BACE;AAAA,gBACGd,KAAK,CAACmB,GAAN,CAAUC,IAAI,iBAAK;AAAA,kBAAgBA;AAAhB,SAASA,IAAT;AAAA;AAAA;AAAA;AAAA,cAAnB;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAM,MAAA,QAAQ,EAAET,OAAhB;AAAA,8BACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,wBAA/B;AAAwD,QAAA,GAAG,EAAER;AAA7D;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GAlCQJ,G;;KAAAA,G;AAoCT,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n\t// State\n  const [todos, setTodos] = useState([]);\n\n  // Binding\n  const todoText = useRef();\n\n  // Side Effects / Lifecycle\n  useEffect(() => {\n    const existingTodos = localStorage.getItem('todos');\n    setTodos(existingTodos ? JSON.parse(existingTodos) : []);\n  }, []);\n\n  // Events\n  function addTodo(event) {\n    event.preventDefault();\n    const next = [...todos, todoText.current.value];\n    setTodos(next);\n    localStorage.setItem('todos', JSON.stringify(next));\n  }\n\n  return (\n    <div>\n      <ul>\n        {todos.map(todo => (<li key={todo}>{todo}</li>))}  \n      </ul>\n\n      <form onSubmit={addTodo}>\n        <input type=\"text\" placeholder=\"What needs to be done?\" ref={todoText} />\n        <input type=\"submit\" value=\"Add Todo\" />\n      </form>\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}